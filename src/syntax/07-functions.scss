@use "sass:meta";
@use "sass:math";

// ? 데이터 타입(data types)
$nothing: null;

$num: 101;
$unit: 180px;

$pretendard: Pretendard;
$spoqa: 'Spoqa Han Sans Neo';

$hex: #f94e07;
$keyword: purple;
$color-function: hsl(18, 95%, 50%);

$yes: true;
$no: false;

$units: 20px 10px 0;
$font-families: Pretendard, Helvetica, sans-serif;
$square-bracket: [Verdana sans-serif];

$theme: (
  light: (
		forground: #121916,
	  background: #e7e6e7,
	),
  dark: (
		background: #121916,
	  forground: #e7e6e7,
	),
);

@function getUnit($value) {
  @return math.unit($value);
}

// ? 연산자
$value-1: 10px;
$value-2: 5;

.container {
	animation-delay: 9s + 21s;
	// width: $value-1 + $value-2;
	// width: calc($value-1 - $value-2);
	// width: $value-1 * $value-2;
	// width: (10px / 5);
	width: math.div($value-1, $value-2);
}

// 'Helvetica Neue'
// @debug $value-1 * $value-2;
// @debug 'Helvetica' + ' ' + 'Neue'; 


// ? 문자 연산자
$word1: 'Helvetica';
$word2: 'Neue';
$word3: sans;
$word4: serif;

// 문자 연산에 있어 +, - 연산자에 의존하기 보다 인터폴레이션을 사용하는 것이 명확합니다.
.box {
	font-family: "#{$word1 $word2}", #{$word3 - $word4};
}

// ? 리스트 비교
// 내용이 같으면 리스트 또한 동일합니다. 쉼표로 구분된 리스트는 공백으로 구분된 리스트와 다르며, 대괄호로 묶인 리스트 또한 대괄호가 없는 리스트와 다릅니다.
// true
// @debug (5px 7px 10px) == (5px 7px 10px);   
// @debug (5px 7px 10px) != (10px 14px 20px); 
// @debug (5px 7px 10px) != (5px, 7px, 10px); 
// @debug (5px 7px 10px) != [5px 7px 10px];   


// ? 단위를 제거하는 함수
// 나눗셈 연산 (10px / 5px = 2)
@function removeUnit($value) {
	@return math.div($value, ($value * 0 + 1));
}

// ? 옵션 인자 
@function rem($value, $base: 16) {
	@return math.div(removeUnit($value), $base) * 1rem;
}

@function em($value, $base) {
	@return math.div(removeUnit($value), removeUnit($base)) * 1em;
}

.box-2 {
	line-height: removeUnit(20%);
}

.box-3 {
	font-size: rem(24px);
}

.box-4 {
	font-size: em(24px, 14px);
}

